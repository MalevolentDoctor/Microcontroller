local opcodes = {}

opcodes.opcode_table = {
	noop = {opcode = 0x00, args = "n00n00", exec_time = 2, desc = "Performs no operation"}, 
	halt = {opcode = 0x01, args = "n00n00", exec_time = 0, desc = "Halts the program"}, 
	rstt = {opcode = 0x02, args = "n00n00", exec_time = 0, desc = "Resets the program"};
	brek = {opcode = 0x03, args = "n00n00", exec_time = 0, desc = "Calls an interrupt"}, 
	clrz = {opcode = 0x04, args = "n00n00", exec_time = 0, desc = "Clears the zero flag"}, 
	clrs = {opcode = 0x05, args = "n00n00", exec_time = 0, desc = "Clears the sign flag"}, 
	clrp = {opcode = 0x06, args = "n00n00", exec_time = 0, desc = "Clears the parity flag"}, 
	clrc = {opcode = 0x07, args = "n00n00", exec_time = 0, desc = "Clears the carry flag"},

	clri = {opcode = 0x08, args = "n00n00", exec_time = 0, desc = "Clears the interrupt disable flag"}, 
	clrv = {opcode = 0x09, args = "n00n00", exec_time = 0, desc = "Clears the overflow flag"}, 
	setz = {opcode = 0x0A, args = "n00n00", exec_time = 0, desc = "Sets the zero flag"}, 
	sets = {opcode = 0x0B, args = "n00n00", exec_time = 0, desc = "Sets the sign flag"}, 
	setp = {opcode = 0x0C, args = "n00n00", exec_time = 0, desc = "Sets the parity flag"}, 
	setc = {opcode = 0x0D, args = "n00n00", exec_time = 0, desc = "Sets the carry flag"}, 
	seti = {opcode = 0x0E, args = "n00n00", exec_time = 0, desc = "Sets the interrupt disable flag"}, 
	setv = {opcode = 0x0F, args = "n00n00", exec_time = 0, desc = "sets the overflow flag"},

	anra = {opcode = 0x10, args = "r08n00", exec_time = 0, desc = "Ands register with accumulator"}, 
	anrr = {opcode = 0x11, args = "r04r04", exec_time = 0, desc = "Ands register with register"}, 
	ania = {opcode = 0x12, args = "i08n00", exec_time = 0, desc = "Ands immediate with accumulator"}, 
	anir = {opcode = 0x13, args = "i08r08", exec_time = 0, desc = "Ands immediate with register"}, 
	anma = {opcode = 0x14, args = "a16n00", exec_time = 0, desc = "Ands value at memory address with accumulator"}, 
	anaz = {opcode = 0x15, args = "n00n00", exec_time = 0, desc = "Ands value at memory address given by Z register with accumulator"}, 
	anrz = {opcode = 0x16, args = "r08z08", exec_time = 0, desc = "Ands register with value at zero page memory address"},

	nota = {opcode = 0x1F, args = "n00n00", exec_time = 0, desc = "Nots the accumulator"},

	orra = {opcode = 0x20, args = "r08n00", exec_time = 0, desc = "Ors register with accumulator"},
	orrr = {opcode = 0x21, args = "r04r04", exec_time = 0, desc = "Ors register with register"},
	oria = {opcode = 0x22, args = "i08n00", exec_time = 0, desc = "Ors immediate with accumulator"},
	orir = {opcode = 0x23, args = "i08r08", exec_time = 0, desc = "Ors immediate with register"},
	orma = {opcode = 0x24, args = "a16n00", exec_time = 0, desc = "Ors value at memory address with accumulator"},
	oraz = {opcode = 0x25, args = "n00n00", exec_time = 0, desc = "Ors value at memory address given by Z register with accumulator"},
	orrz = {opcode = 0x26, args = "r08z08", exec_time = 0, desc = "Ors register with value at zero page memory address"},

	xora = {opcode = 0x28, args = "r08n00", exec_time = 0, desc = "Xors register with accumulator"},
	xorr = {opcode = 0x29, args = "r04r04", exec_time = 0, desc = "Xors register with register"},
	xoia = {opcode = 0x2A, args = "i08n00", exec_time = 0, desc = "Xors immediate with accumulator"},
	xoir = {opcode = 0x2B, args = "i08r08", exec_time = 0, desc = "Xors immediate with register"},
	xoma = {opcode = 0x2C, args = "a16n00", exec_time = 0, desc = "Xors value at memory address with accumulator"},
	xoaz = {opcode = 0x2D, args = "n00n00", exec_time = 0, desc = "Xors value at memory address given by Z register with accumulator"},
	xorz = {opcode = 0x2E, args = "r08z08", exec_time = 0, desc = "Xors register with value at zero page memory address"},

	lsra = {opcode = 0x30, args = "n00n00", exec_time = 0, desc = "logical right shift"},
	lsrc = {opcode = 0x31, args = "n00n00", exec_time = 0, desc = "logical right shift with carry"},
	lsla = {opcode = 0x33, args = "n00n00", exec_time = 0, desc = "logical left shift"},
	lslc = {opcode = 0x34, args = "n00n00", exec_time = 0, desc = "logical left shift with carry"},
	asra = {opcode = 0x36, args = "n00n00", exec_time = 0, desc = "arithmetic right shift"},
	asla = {opcode = 0x37, args = "n00n00", exec_time = 0, desc = "arithmetic left shift"},

	rora = {opcode = 0x39, args = "n00n00", exec_time = 0, desc = "rotate right"},
	rorc = {opcode = 0x3A, args = "n00n00", exec_time = 0, desc = "rotate right with carry"},
	rort = {opcode = 0x3B, args = "n00n00", exec_time = 0, desc = "rotate right through carry"},
	rola = {opcode = 0x3D, args = "n00n00", exec_time = 0, desc = "rotate left"},
	rolc = {opcode = 0x3E, args = "n00n00", exec_time = 0, desc = "rotate left with carry"},
	rolt = {opcode = 0x3F, args = "n00n00", exec_time = 0, desc = "rotate left through carry"},

	mvrr = {opcode = 0x41, args = "r04r04", exec_time = 0, desc = "Move contents of register to register"},
	mvia = {opcode = 0x42, args = "i08n00", exec_time = 0, desc = "Move immediate to accumulator"}, 
	mvir = {opcode = 0x43, args = "i08r08", exec_time = 0, desc = "Move immediate to register"},
	mviz = {opcode = 0x47, args = "i16n00", exec_time = 0, desc = "Move 16 bit immediate to Z register"},

	tfzi = {opcode = 0x48, args = "n00n00", exec_time = 0, desc = "Transfer contents of Z register to the instruction pointer"},
	tfiz = {opcode = 0x49, args = "n00n00", exec_time = 0, desc = "Transfer instruction pointer to the Z register"},
	tfxs = {opcode = 0x4A, args = "n00n00", exec_time = 0, desc = "Transfer X register to the stack pointer"},
	tfsx = {opcode = 0x4B, args = "n00n00", exec_time = 0, desc = "Transfer stack pointer to the X register"},
	tffa = {opcode = 0x4C, args = "n00n00", exec_time = 0, desc = "Transfer flag register to the accumulator"},
	tffr = {opcode = 0x4D, args = "n00n00", exec_time = 0, desc = "Transfer flag register to register"},
	tfaf = {opcode = 0x4E, args = "n00n00", exec_time = 0, desc = "Transfer accumulator to flag register"},
	tfrf = {opcode = 0x4F, args = "n00n00", exec_time = 0, desc = "Transfer register to flag register"},

	stza = {opcode = 0x50, args = "z08n00", exec_time = 0, desc = "Store accumulator at zero page address"},
	stzr = {opcode = 0x51, args = "z08r08", exec_time = 0, desc = "Store register at zero page address"},
	stma = {opcode = 0x54, args = "a16n00", exec_time = 0, desc = "Store accumulator at memory address"},
	staz = {opcode = 0x55, args = "n00n00", exec_time = 0, desc = "Store accumulator at memory address given by the Z register"},
	strz = {opcode = 0x56, args = "r08n00", exec_time = 0, desc = "Store register at memory address given by the Z register"},

	ldza = {opcode = 0x58, args = "z08n00", exec_time = 0, desc = "Load accumulator from zero page address"},
	ldzr = {opcode = 0x59, args = "z08r08", exec_time = 0, desc = "Load register from zero page address"},
	ldma = {opcode = 0x5C, args = "a16n00", exec_time = 0, desc = "Load accumulator from memory address"},
	ldaz = {opcode = 0x5D, args = "n00n00", exec_time = 0, desc = "Load accumulator from memory address given by the Z register"},
	ldrz = {opcode = 0x5E, args = "r08n00", exec_time = 0, desc = "Load register from memory address given by the Z register"},

	jump = {opcode = 0x60, args = "a16n00", exec_time = 0, desc = ""},
	jpsn = {opcode = 0x62, args = "a16n00", exec_time = 0, desc = ""},
	jpsp = {opcode = 0x63, args = "a16n00", exec_time = 0, desc = ""},
	jpez = {opcode = 0x65, args = "a16n00", exec_time = 0, desc = ""},
	jpnz = {opcode = 0x66, args = "a16n00", exec_time = 0, desc = ""},

	jppo = {opcode = 0x68, args = "a16n00", exec_time = 0, desc = ""},
	jppe = {opcode = 0x69, args = "a16n00", exec_time = 0, desc = ""},
	jpic = {opcode = 0x6B, args = "a16n00", exec_time = 0, desc = ""},
	jpnc = {opcode = 0x6C, args = "a16n00", exec_time = 0, desc = ""},
	jpiv = {opcode = 0x6E, args = "a16n00", exec_time = 0, desc = ""},
	jpnv = {opcode = 0x6F, args = "a16n00", exec_time = 0, desc = ""},

	call = {opcode = 0x70, args = "a16n00", exec_time = 0, desc = ""},
	clsn = {opcode = 0x72, args = "a16n00", exec_time = 0, desc = ""},
	clsp = {opcode = 0x73, args = "a16n00", exec_time = 0, desc = ""},
	clez = {opcode = 0x75, args = "a16n00", exec_time = 0, desc = ""},
	clnz = {opcode = 0x76, args = "a16n00", exec_time = 0, desc = ""},

	clpo = {opcode = 0x78, args = "a16n00", exec_time = 0, desc = ""},
	clpe = {opcode = 0x79, args = "a16n00", exec_time = 0, desc = ""},
	clic = {opcode = 0x7B, args = "a16n00", exec_time = 0, desc = ""},
	clnc = {opcode = 0x7C, args = "a16n00", exec_time = 0, desc = ""},
	cliv = {opcode = 0x7E, args = "a16n00", exec_time = 0, desc = ""},
	clnv = {opcode = 0x7F, args = "a16n00", exec_time = 0, desc = ""},

	retn = {opcode = 0x80, args = "n00n00", exec_time = 0, desc = ""},
	rtsn = {opcode = 0x82, args = "n00n00", exec_time = 0, desc = ""},
	rtsp = {opcode = 0x83, args = "n00n00", exec_time = 0, desc = ""},
	rtez = {opcode = 0x85, args = "n00n00", exec_time = 0, desc = ""},
	rtnz = {opcode = 0x86, args = "n00n00", exec_time = 0, desc = ""},

	rtpo = {opcode = 0x88, args = "n00n00", exec_time = 0, desc = ""},
	rtpe = {opcode = 0x89, args = "n00n00", exec_time = 0, desc = ""},
	rtic = {opcode = 0x8B, args = "n00n00", exec_time = 0, desc = ""},
	rtnc = {opcode = 0x8C, args = "n00n00", exec_time = 0, desc = ""},
	rtiv = {opcode = 0x8E, args = "n00n00", exec_time = 0, desc = ""},
	rtnv = {opcode = 0x8F, args = "n00n00", exec_time = 0, desc = ""},

	inaa = {opcode = 0x90, args = "n00n00", exec_time = 0, desc = ""},
	inrr = {opcode = 0x91, args = "r08n00", exec_time = 0, desc = ""},
	inmm = {opcode = 0x94, args = "a16n00", exec_time = 0, desc = ""},
	inzz = {opcode = 0x95, args = "n00n00", exec_time = 0, desc = ""},
	inmz = {opcode = 0x96, args = "z08n00", exec_time = 0, desc = ""},

	dcaa = {opcode = 0x98, args = "n00n00", exec_time = 0, desc = ""},
	dcrr = {opcode = 0x99, args = "r08n00", exec_time = 0, desc = ""},
	dcmm = {opcode = 0x9C, args = "a16n00", exec_time = 0, desc = ""},
	dczz = {opcode = 0x9D, args = "n00n00", exec_time = 0, desc = ""},
	dcmz = {opcode = 0x93, args = "z08n00", exec_time = 0, desc = ""},

	adra = {opcode = 0xA0, args = "r08n00", exec_time = 0, desc = ""},
	adrr = {opcode = 0xA1, args = "r04r04", exec_time = 0, desc = ""},
	adia = {opcode = 0xA2, args = "i08n00", exec_time = 0, desc = ""},
	adir = {opcode = 0xA3, args = "i08r08", exec_time = 0, desc = ""},
	adma = {opcode = 0xA4, args = "a16n00", exec_time = 0, desc = ""},
	adaz = {opcode = 0xA5, args = "n00n00", exec_time = 0, desc = ""},
	adrz = {opcode = 0xA6, args = "r08n00", exec_time = 0, desc = ""},

	acra = {opcode = 0xA8, args = "r08n00", exec_time = 0, desc = ""},
	acrr = {opcode = 0xA9, args = "r04r04", exec_time = 0, desc = ""},
	acia = {opcode = 0xAA, args = "i08n00", exec_time = 0, desc = ""},
	acir = {opcode = 0xAB, args = "i08r08", exec_time = 0, desc = ""},
	acma = {opcode = 0xAC, args = "a16n00", exec_time = 0, desc = ""},
	acaz = {opcode = 0xAD, args = "n00n00", exec_time = 0, desc = ""},
	acrz = {opcode = 0xAE, args = "r08n00", exec_time = 0, desc = ""},

	sbra = {opcode = 0xB0, args = "r08n00", exec_time = 0, desc = ""},
	sbrr = {opcode = 0xB1, args = "r04r04", exec_time = 0, desc = ""},
	sbia = {opcode = 0xB2, args = "i08n00", exec_time = 0, desc = ""},
	sbir = {opcode = 0xB3, args = "i08r08", exec_time = 0, desc = ""},
	sbma = {opcode = 0xB4, args = "a16n00", exec_time = 0, desc = ""},
	sbaz = {opcode = 0xB5, args = "n00n00", exec_time = 0, desc = ""},
	sbrz = {opcode = 0xB6, args = "r08n00", exec_time = 0, desc = ""},

	scra = {opcode = 0xB8, args = "r08n00", exec_time = 0, desc = ""},
	scrr = {opcode = 0xB9, args = "r04r04", exec_time = 0, desc = ""},
	scia = {opcode = 0xBA, args = "i08n00", exec_time = 0, desc = ""},
	scir = {opcode = 0xBB, args = "i08r08", exec_time = 0, desc = ""},
	scma = {opcode = 0xBC, args = "a16n00", exec_time = 0, desc = ""},
	scaz = {opcode = 0xBD, args = "n00n00", exec_time = 0, desc = ""},
	scrz = {opcode = 0xBE, args = "r08n00", exec_time = 0, desc = ""},

	cpra = {opcode = 0xC0, args = "r08n00", exec_time = 0, desc = ""},
	cprr = {opcode = 0xC1, args = "r04r04", exec_time = 0, desc = ""},
	cpia = {opcode = 0xC2, args = "i08n00", exec_time = 0, desc = ""},
	cpir = {opcode = 0xC3, args = "i08r08", exec_time = 0, desc = ""},
	cpma = {opcode = 0xC4, args = "a16n00", exec_time = 0, desc = ""},
	cpaz = {opcode = 0xC5, args = "n00n00", exec_time = 0, desc = ""},
	cprz = {opcode = 0xC6, args = "r08n00", exec_time = 0, desc = ""},
	cpza = {opcode = 0xC7, args = "z08n00", exec_time = 0, desc = ""},
	
	cpzr = {opcode = 0xCF, args = "z08r08", exec_time = 0, desc = ""},

	psha = {opcode = 0xD0, args = "n00n00", exec_time = 0, desc = ""},
	pshr = {opcode = 0xD1, args = "r08n00", exec_time = 0, desc = ""},
	pshf = {opcode = 0xD2, args = "n00n00", exec_time = 0, desc = ""},

	plla = {opcode = 0xD8, args = "n00n00", exec_time = 0, desc = ""},
	pllr = {opcode = 0xD9, args = "r08n00", exec_time = 0, desc = ""},
	pllf = {opcode = 0xDA, args = "n00n00", exec_time = 0, desc = ""},
	popd = {opcode = 0xDF, args = "n00n00", exec_time = 0, desc = ""},

	adza = {opcode = 0xE0, args = "z08n00", exec_time = 0, desc = ""},
	adzr = {opcode = 0xE1, args = "z08r08", exec_time = 0, desc = ""},
	acza = {opcode = 0xE2, args = "z08n00", exec_time = 0, desc = ""},
	aczr = {opcode = 0xE3, args = "z08r08", exec_time = 0, desc = ""},
	sbza = {opcode = 0xE4, args = "z08n00", exec_time = 0, desc = ""},
	sbzr = {opcode = 0xE5, args = "z08r08", exec_time = 0, desc = ""},
	scza = {opcode = 0xE6, args = "z08n00", exec_time = 0, desc = ""},
	sczr = {opcode = 0xE7, args = "z08r08", exec_time = 0, desc = ""},

	inzm = {opcode = 0xE8, args = "z08n00", exec_time = 0, desc = ""},
	dczm = {opcode = 0xE9, args = "z08n00", exec_time = 0, desc = ""},
	anza = {opcode = 0xEA, args = "z08n00", exec_time = 0, desc = ""},
	anzr = {opcode = 0xEB, args = "z08r08", exec_time = 0, desc = ""},
	orza = {opcode = 0xEC, args = "z08n00", exec_time = 0, desc = ""},
	orzr = {opcode = 0xED, args = "z08r08", exec_time = 0, desc = ""},
	xoza = {opcode = 0xEE, args = "z08n00", exec_time = 0, desc = ""},
	xozr = {opcode = 0xEF, args = "z08r08", exec_time = 0, desc = ""}
}

return opcodes