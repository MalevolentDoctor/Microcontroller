---@diagnostic disable: lowercase-global


numbers = {
    oct_to_bin_lookup = {
        ['0'] = '000',
        ['1'] = '001',
        ['2'] = '010',
        ['3'] = '011',
        ['4'] = '100',
        ['5'] = '101',
        ['6'] = '110',
        ['7'] = '111'
    },

    hex_to_bin_lookup = {
        ['0'] = '0000',
        ['1'] = '0001',
        ['2'] = '0010',
        ['3'] = '0011',
        ['4'] = '0100',
        ['5'] = '0101',
        ['6'] = '0110',
        ['7'] = '0111',
        ['8'] = '1000',
        ['9'] = '1001',
        ['A'] = '1010', ['a'] = '1010',
        ['B'] = '1011', ['b'] = '1011',
        ['C'] = '1100', ['c'] = '1100',
        ['D'] = '1101', ['d'] = '1101',
        ['E'] = '1110', ['e'] = '1110',
        ['F'] = '1111', ['f'] = '1111'
    },

    hex_to_dec_lookup = {
        ['0'] = 0, ['1'] = 1, ['2'] = 2, ['3'] = 3, 
        ['4'] = 4, ['5'] = 5, ['6'] = 6, ['7'] = 7,
        ['8'] = 8, ['9'] = 9, ['a'] =10, ['A'] =10,
        ['b'] =11, ['B'] =11, ['c'] =12, ['C'] =12,
        ['d'] =13, ['D'] =13, ['e'] =14, ['E'] =14,
        ['f'] =15, ['F'] =15
    },

    byte_to_hex_lookup = {
        ['00000000'] = '00',
        ['00000001'] = '01',
        ['00000010'] = '02',
        ['00000011'] = '03',
        ['00000100'] = '04',
        ['00000101'] = '05',
        ['00000110'] = '06',
        ['00000111'] = '07',
        ['00001000'] = '08',
        ['00001001'] = '09',
        ['00001010'] = '0A',
        ['00001011'] = '0B',
        ['00001100'] = '0C',
        ['00001101'] = '0D',
        ['00001110'] = '0E',
        ['00001111'] = '0F',
        ['00010000'] = '10',
        ['00010001'] = '11',
        ['00010010'] = '12',
        ['00010011'] = '13',
        ['00010100'] = '14',
        ['00010101'] = '15',
        ['00010110'] = '16',
        ['00010111'] = '17',
        ['00011000'] = '18',
        ['00011001'] = '19',
        ['00011010'] = '1A',
        ['00011011'] = '1B',
        ['00011100'] = '1C',
        ['00011101'] = '1D',
        ['00011110'] = '1E',
        ['00011111'] = '1F',
        ['00100000'] = '20',
        ['00100001'] = '21',
        ['00100010'] = '22',
        ['00100011'] = '23',
        ['00100100'] = '24',
        ['00100101'] = '25',
        ['00100110'] = '26',
        ['00100111'] = '27',
        ['00101000'] = '28',
        ['00101001'] = '29',
        ['00101010'] = '2A',
        ['00101011'] = '2B',
        ['00101100'] = '2C',
        ['00101101'] = '2D',
        ['00101110'] = '2E',
        ['00101111'] = '2F',
        ['00110000'] = '30',
        ['00110001'] = '31',
        ['00110010'] = '32',
        ['00110011'] = '33',
        ['00110100'] = '34',
        ['00110101'] = '35',
        ['00110110'] = '36',
        ['00110111'] = '37',
        ['00111000'] = '38',
        ['00111001'] = '39',
        ['00111010'] = '3A',
        ['00111011'] = '3B',
        ['00111100'] = '3C',
        ['00111101'] = '3D',
        ['00111110'] = '3E',
        ['00111111'] = '3F',
        ['01000000'] = '40',
        ['01000001'] = '41',
        ['01000010'] = '42',
        ['01000011'] = '43',
        ['01000100'] = '44',
        ['01000101'] = '45',
        ['01000110'] = '46',
        ['01000111'] = '47',
        ['01001000'] = '48',
        ['01001001'] = '49',
        ['01001010'] = '4A',
        ['01001011'] = '4B',
        ['01001100'] = '4C',
        ['01001101'] = '4D',
        ['01001110'] = '4E',
        ['01001111'] = '4F',
        ['01010000'] = '50',
        ['01010001'] = '51',
        ['01010010'] = '52',
        ['01010011'] = '53',
        ['01010100'] = '54',
        ['01010101'] = '55',
        ['01010110'] = '56',
        ['01010111'] = '57',
        ['01011000'] = '58',
        ['01011001'] = '59',
        ['01011010'] = '5A',
        ['01011011'] = '5B',
        ['01011100'] = '5C',
        ['01011101'] = '5D',
        ['01011110'] = '5E',
        ['01011111'] = '5F',
        ['01100000'] = '60',
        ['01100001'] = '61',
        ['01100010'] = '62',
        ['01100011'] = '63',
        ['01100100'] = '64',
        ['01100101'] = '65',
        ['01100110'] = '66',
        ['01100111'] = '67',
        ['01101000'] = '68',
        ['01101001'] = '69',
        ['01101010'] = '6A',
        ['01101011'] = '6B',
        ['01101100'] = '6C',
        ['01101101'] = '6D',
        ['01101110'] = '6E',
        ['01101111'] = '6F',
        ['01110000'] = '70',
        ['01110001'] = '71',
        ['01110010'] = '72',
        ['01110011'] = '73',
        ['01110100'] = '74',
        ['01110101'] = '75',
        ['01110110'] = '76',
        ['01110111'] = '77',
        ['01111000'] = '78',
        ['01111001'] = '79',
        ['01111010'] = '7A',
        ['01111011'] = '7B',
        ['01111100'] = '7C',
        ['01111101'] = '7D',
        ['01111110'] = '7E',
        ['01111111'] = '7F',
        ['10000000'] = '80',
        ['10000001'] = '81',
        ['10000010'] = '82',
        ['10000011'] = '83',
        ['10000100'] = '84',
        ['10000101'] = '85',
        ['10000110'] = '86',
        ['10000111'] = '87',
        ['10001000'] = '88',
        ['10001001'] = '89',
        ['10001010'] = '8A',
        ['10001011'] = '8B',
        ['10001100'] = '8C',
        ['10001101'] = '8D',
        ['10001110'] = '8E',
        ['10001111'] = '8F',
        ['10010000'] = '90',
        ['10010001'] = '91',
        ['10010010'] = '92',
        ['10010011'] = '93',
        ['10010100'] = '94',
        ['10010101'] = '95',
        ['10010110'] = '96',
        ['10010111'] = '97',
        ['10011000'] = '98',
        ['10011001'] = '99',
        ['10011010'] = '9A',
        ['10011011'] = '9B',
        ['10011100'] = '9C',
        ['10011101'] = '9D',
        ['10011110'] = '9E',
        ['10011111'] = '9F',
        ['10100000'] = 'A0',
        ['10100001'] = 'A1',
        ['10100010'] = 'A2',
        ['10100011'] = 'A3',
        ['10100100'] = 'A4',
        ['10100101'] = 'A5',
        ['10100110'] = 'A6',
        ['10100111'] = 'A7',
        ['10101000'] = 'A8',
        ['10101001'] = 'A9',
        ['10101010'] = 'AA',
        ['10101011'] = 'AB',
        ['10101100'] = 'AC',
        ['10101101'] = 'AD',
        ['10101110'] = 'AE',
        ['10101111'] = 'AF',
        ['10110000'] = 'B0',
        ['10110001'] = 'B1',
        ['10110010'] = 'B2',
        ['10110011'] = 'B3',
        ['10110100'] = 'B4',
        ['10110101'] = 'B5',
        ['10110110'] = 'B6',
        ['10110111'] = 'B7',
        ['10111000'] = 'B8',
        ['10111001'] = 'B9',
        ['10111010'] = 'BA',
        ['10111011'] = 'BB',
        ['10111100'] = 'BC',
        ['10111101'] = 'BD',
        ['10111110'] = 'BE',
        ['10111111'] = 'BF',
        ['11000000'] = 'C0',
        ['11000001'] = 'C1',
        ['11000010'] = 'C2',
        ['11000011'] = 'C3',
        ['11000100'] = 'C4',
        ['11000101'] = 'C5',
        ['11000110'] = 'C6',
        ['11000111'] = 'C7',
        ['11001000'] = 'C8',
        ['11001001'] = 'C9',
        ['11001010'] = 'CA',
        ['11001011'] = 'CB',
        ['11001100'] = 'CC',
        ['11001101'] = 'CD',
        ['11001110'] = 'CE',
        ['11001111'] = 'CF',
        ['11010000'] = 'D0',
        ['11010001'] = 'D1',
        ['11010010'] = 'D2',
        ['11010011'] = 'D3',
        ['11010100'] = 'D4',
        ['11010101'] = 'D5',
        ['11010110'] = 'D6',
        ['11010111'] = 'D7',
        ['11011000'] = 'D8',
        ['11011001'] = 'D9',
        ['11011010'] = 'DA',
        ['11011011'] = 'DB',
        ['11011100'] = 'DC',
        ['11011101'] = 'DD',
        ['11011110'] = 'DE',
        ['11011111'] = 'DF',
        ['11100000'] = 'E0',
        ['11100001'] = 'E1',
        ['11100010'] = 'E2',
        ['11100011'] = 'E3',
        ['11100100'] = 'E4',
        ['11100101'] = 'E5',
        ['11100110'] = 'E6',
        ['11100111'] = 'E7',
        ['11101000'] = 'E8',
        ['11101001'] = 'E9',
        ['11101010'] = 'EA',
        ['11101011'] = 'EB',
        ['11101100'] = 'EC',
        ['11101101'] = 'ED',
        ['11101110'] = 'EE',
        ['11101111'] = 'EF',
        ['11110000'] = 'F0',
        ['11110001'] = 'F1',
        ['11110010'] = 'F2',
        ['11110011'] = 'F3',
        ['11110100'] = 'F4',
        ['11110101'] = 'F5',
        ['11110110'] = 'F6',
        ['11110111'] = 'F7',
        ['11111000'] = 'F8',
        ['11111001'] = 'F9',
        ['11111010'] = 'FA',
        ['11111011'] = 'FB',
        ['11111100'] = 'FC',
        ['11111101'] = 'FD',
        ['11111110'] = 'FE',
        ['11111111'] = 'FF'
    }
}

function numbers.decToBin(num)
    local bin = "";
    while num >= 1 do
        bin = tostring(num%2) .. bin;
        num = math.floor(num/2);
    end
    return bin
end

function numbers.octToBin(num)
    local bin = "";

    for i = 1,num:len() do
        bin = bin .. numbers.oct_to_bin_lookup[string.sub(num, i, i)]
    end

    return bin
end

function numbers.hexToBin(num)
    local bin = "";
    for i = 1,num:len() do
        bin = bin .. numbers.hex_to_bin_lookup[string.sub(num, i, i)]
    end

    return bin
end

function numbers.hexToDec(num)
    local dec = 0;
    local length = num:len();
    for i = length,1,-1 do
        dec = dec + numbers.hex_to_dec_lookup[num:sub(i,i)] * math.pow(16, length - i)
    end
    return dec
end

function numbers.byteToHex(byte)
    return numbers.byte_to_hex_lookup[byte]
end

-- forces the binary value to contain a certaing number of bits by trimming
-- or appending zeros, oversize set to 'true' if trimming down required
function numbers.setBits(num, bits)
    if num == nil then return nil, nil end
    print("set bits", string.len(num))
    local oversize = false;
    if string.len(num) > bits then
        oversize = true;
        while string.len(num) > bits do
            num = string.sub(num, 2, -1)
        end
    elseif string.len(num) < bits then
        while string.len(num) < bits do
            num = "0" .. num
        end
    end
    return num, oversize
end

-- number is in the format "0f4h" (binary (b), octonal (o), decimal (d) or hexadecimal (h))
-- binary value returned with the specified number of bits and no suffix 
function numbers.toBin(num, bits)
    bits = bits or 8 -- default number of bits to 8

    local outnum, oversize;
    if type(num) == "number" then
        outnum, oversize = numbers.setBits(numbers.decToBin(num), bits)
    elseif type(num) == "string" then

        local num_type = string.sub(num, -1, -1);
        local num_val = string.sub(num, 1, -2);
        
        if num_type == "b" then 
            -- binary to binary (just change number of bits)
            outnum, oversize = numbers.setBits(num_val, bits)
        elseif num_type == "o" then
            -- octal to binary and changing number of bits
            outnum, oversize = numbers.setBits(numbers.octToBin(num_val), bits)
        elseif num_type == "d" then
            -- decimal to binary and changing number of bits
            outnum, oversize = numbers.setBits(numbers.decToBin(tonumber(num_val)), bits)
        elseif num_type == "h" then
            -- hexadecimal to binary and changing number of bits
            outnum, oversize = numbers.setBits(numbers.hexToBin(num_val), bits)
        else 
            -- if bad, return nil, nil
            return nil, nil
        end
    else
        return nil, nil
    end

    -- outnum: binary value e.g. "010011"
    -- oversize: bool true if removed significant bits while trimming
    return outnum, oversize
end

-- converts a binary value (no suffix) to decimal (as a number)
function numbers.binToDec(bin)
    local num = 0;
    local mul = 1;
    local digits = string.len(bin);
    for i = digits,1,-1 do
        num = num + tonumber(string.sub(bin, i, i))*mul;
        mul = mul + mul;
    end
    return num
end